/* Створюємо абстрактний клас, наслідуючи властивості якого
   вже будуть створюватися реальні класи (конструктори)
   На основі цих конструкторів будуть створювати екземпляри
 */
var Model = {

  /*  */
  prototype: {
    init: function () {}
  },

  /* 1 - Створюємо клас унаслідуючи методи абстрактного класу Model */
  create: function () {
    /* Записуємо властипості Model в прототип Class  */
    var Class = Object.create(this);

    /* Записуємо властивості прототипу Model в прототип прототипу Class */
    Class.prototype = Object.create(this.prototype);

    /* Повертаємо Class */
    return Class
  },

  /* 2 - Добавляємо до прототипу класу додаткові специфічні для нього методи.
  В пункті 1 ми унаслідували методи абстрактного класу Model і тепер додаємо власні
  Це методи що записуються в прототип, тому використовуються екземплярами
  */
  include: function (obj) {
    for (var i in obj) {
      this.prototype[i] = obj[i];
    }
  },

  /* 3 - Добавляємо статичні методи класу, що викликаються в контексті 
  класу, а не екземпляру. Вони додаються як методи класу, а не його прототипу
  */
  extend: function () {
    for (var i in obj) {
      this[i] = obj[i];
    }
  },

  /* 4 - Створюємо екземпляр створеного конструктора */
  init: function () {
    /* Унаслідуємо обєктом в прототип всі методи класу Class */
    var instance = Object.create(this.prototype);

    /* Унаслідуємо властивості класу Class */
    instance.init.apply(instance, arguments);

    /* Повертаємо екземпляр з який може працюємо*/
    return instance;
  }
}